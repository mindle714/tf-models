#!/usr/bin/bash

USAGE="Usage: $0 -e <epoch> -p <prefix> [-s]"
EXAMPLE="($0 -e 10000)"

unset epochs; sep=false; pref=""
while getopts ":e:sp:" opt; do
  case $opt in
    e) epochs+=("$OPTARG") ;;
    s) sep=true ;;
    p) pref="$OPTARG" ;;
    ?) echo "$USAGE"; echo "$EXAMPLE"; exit 2 ;;
  esac
done

evaldir=results

print_epoch() {
  epoch="$1"

  for eval in ${evaldir}/${pref}*-${epoch}.eval; do
    if [ "$eval" == "*-${epoch}.eval" ]; then return; fi
    if echo $eval | grep -q _sep; then continue; fi

    suf="$(echo $eval | sed 's/\.eval//g' | cut -d- -f1 | rev | cut -d/ -f1 | rev)";
    if ! tail -n1 $eval | grep -q final; then
      score1="$(cat $eval | awk '{s+=$1} END{print s/NR}')"
      score2="$(cat $eval | awk '{s+=$2} END{print s/NR}')"
      score3="$(cat $eval | awk '{s+=$3} END{print s/NR}')"
      score4="$(cat $eval | awk '{s+=$4} END{print s/NR}')"
      score5="$(cat $eval | awk '{s+=$5} END{print s/NR}')"
      score6="$(cat $eval | awk '{s+=$6} END{print s/NR}')"
      len="$(wc -l $eval | awk '{print $1}')"
      printf "%30s \t%.5f\t%.5f\t%.5f\t%.5f\t%.5f\t%.5f   IN PROGRESS(%d)\n" \
        "$suf($epoch)" $score1 $score2 $score3 $score4 $score5 $score6 $len
      continue
    fi
    printf "%30s\t" "$suf($epoch)"; tail -n1 $eval | grep final | sed 's/final: //g' \
      | awk '{printf "%.5f\t%.5f\t%.5f\t%.5f\t%.5f\t%.5f\n", $1, $2, $3, $4, $5, $6}'
  done
}

print_sep_epoch() {
  epoch="$1"

  for eval in ${evaldir}/${pref}*_sep*-${epoch}.eval; do 
    if [ "$eval" == "*_sep*-${epoch}.eval" ]; then return; fi

    suf="$(echo $eval | sed 's/\.eval//g' | cut -d- -f1 | rev | cut -d/ -f1 | rev)";
    if ! tail -n1 $eval | grep -q final; then
      score1="$(cat $eval | awk '{s+=$1} END{print s/NR}')"
      len="$(wc -l $eval | awk '{print $1}')"
      printf "%30s \t%.5f\tIN PROGRESS(%d)\n" "$suf($epoch)" $score1 $len
      continue
    fi
    printf "%30s\t" "$suf($epoch)"; tail -n1 $eval | grep final | sed 's/final: //g' \
      | awk '{printf "%.5f\n", $1}'
  done
}

if ! $sep; then
  if [ -z ${epochs+x} ]; then
    epochs="$(ls ${evaldir}/${pref}*.eval | grep -o "\-[0-9]*\.eval" | cut -d- -f2 | cut -d. -f1 | sort -k1 -n | uniq)"
    printf "%30s\tPESQ    STOI    CSIG    CBAK    COVL    SSNR\n" ""
    for epoch in $epochs; do
      print_epoch $epoch
    done
  else
    printf "%30s\tPESQ    STOI    CSIG    CBAK    COVL    SSNR\n" ""
    for epoch in "${epochs[@]}"; do
      print_epoch $epoch
    done
  fi
else
  if [ -z ${epochs+x} ]; then
    epochs="$(ls ${evaldir}/${pref}*.eval | grep -o "\-[0-9]*\.eval" | cut -d- -f2 | cut -d. -f1 | sort -k1 -n | uniq)"
    printf "%30s\tSI-SNR\n" ""
    for epoch in $epochs; do
      print_sep_epoch $epoch
    done
  else
    printf "%30s\tSI-SNR\n" ""
    for epoch in "${epochs[@]}"; do
      print_sep_epoch $epoch
    done
  fi
fi
